package com.trio.view.ctrl;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.zkoss.zk.ui.Component;
import org.zkoss.zkplus.databind.AnnotateDataBinder;
import org.zkoss.zul.Button;
import org.zkoss.zul.Checkbox;
import org.zkoss.zul.Grid;
import org.zkoss.zul.Label;
import org.zkoss.zul.ListModel;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Listcell;
import org.zkoss.zul.Listitem;
import org.zkoss.zul.Popup;
import org.zkoss.zul.Radio;
import org.zkoss.zul.Radiogroup;
import org.zkoss.zul.Textbox;

import com.trio.base.TrioBasePage;
import com.trio.bean.h000.HondaH000Dealers;
import com.trio.bean.h100.TrioH100DtlAreaDealers;
import com.trio.bean.h100.TrioH100PelangWils;
import com.trio.bean.h100.TrioH100Stdetails;
import com.trio.view.ctrl.renderer.DealerListRenderer;
import com.trio.view.ctrl.renderer.StdetailListRenderer;
import com.trio.view.ctrl.renderer.StdetailListRenderer2;

public class PelangwilCtrl extends TrioBasePage {

	private static final long serialVersionUID = 20111130143824L;
	private AnnotateDataBinder binder;
	
	private Textbox kdDlr;
	private Button LOV;
	private Button tampil;
	private Popup popDealer;
	private Listbox popDealerList;
	
	private Listbox dealerList;
	private Grid editDealerGrid;
	
	private TrioH100DtlAreaDealers _dealer;
	
	private Listbox stDetailList;
	
	private Radiogroup radioApprove;
	private Radio r1;
	private Radio r2;
	
	private Button simpan;
	private Button reset;
	private Button close;
	
	private String nilaiPwConfig;
	private String noApproval;
	private Label lblNoApproval;
	
	private HondaH000Dealers popObject;
	private Textbox popKdDlr;
	private Textbox popDlrNama;
	
	private Button popSearch;
	private Button popReset;
	
	@Override
	public void doAfterCompose(Component comp) throws Exception {
		super.doAfterCompose(comp);
		binder = (AnnotateDataBinder) page.getAttribute("binder");
		_dealer = new TrioH100DtlAreaDealers();
		simpan.setDisabled(true);
		nilaiPwConfig = getMasterFacade().getHondaH000SetupsDao().findByValIdValTag("H1_CONFIG", "NOMINAL_PELANG_WIL").getValChar();
		popObject = new HondaH000Dealers();
	}
	
	private ListModelList getModel() {
		return (ListModelList) dealerList.getModel();
	}
	
	public TrioH100DtlAreaDealers getDealer() {
		return _dealer;
	}
	
	public void setDealer(TrioH100DtlAreaDealers dealer) {
		_dealer = dealer;
	}
	
	public void onClick$tampil() throws InterruptedException {
		
		TrioH100Stdetails st = new TrioH100Stdetails();
		st.setKdDlr(_dealer.getKdDlr());
		String statusPw = radioApprove.getSelectedItem().getValue();
		st.setStatusPw(statusPw);
		if (statusPw.equalsIgnoreCase("A")){
			//stDetailList.setModel(new ListModelList(getMasterFacade().getStdetailDao().getStdetailByCriteria(st))); 
			stDetailList.setModel(new ListModelList(getMasterFacade().getTrioH100StdetailsDao().findByExample(st)));
			stDetailList.setItemRenderer(new StdetailListRenderer());
			simpan.setDisabled(false);
		}else {
			//stDetailList.setModel(new ListModelList(getMasterFacade().getStdetailDao().getStdetailByCriteria(st))); 
			stDetailList.setModel(new ListModelList(getMasterFacade().getTrioH100StdetailsDao().findByExample(st)));
			stDetailList.setItemRenderer(new StdetailListRenderer2());
			simpan.setDisabled(true);
		}
		lblNoApproval.setValue(null);
		
	}
	
	public void onClick$simpan(){
		System.out.println("This is simpan");
		
		TrioH100PelangWils pw = new TrioH100PelangWils();
		Set<TrioH100Stdetails> setStdetail = new HashSet<TrioH100Stdetails>();
		String nilaiPw = "";
		
		Listbox box = (Listbox) stDetailList.getFellow("win").getFellow("stDetailList");
		List<Listitem> item = box.getItems();
		ListModel model = box.getModel();
		
		for (Listitem listItem : item){
			TrioH100Stdetails st = (TrioH100Stdetails)listItem.getValue();
			
			List<Component> com = listItem.getChildren();
			for (Component compCell : com){	
				Listcell list = (Listcell) compCell;
				if (list.getFirstChild() instanceof Textbox){
					Textbox tb = (Textbox) list.getFirstChild();
					nilaiPw = tb.getValue();
					//System.out.println("Tb value = "+tb.getValue());
				}
				if (list.getFirstChild() instanceof Checkbox){
					Checkbox cb = (Checkbox) list.getFirstChild();
					if (cb.isChecked()){
						st.setNilaiPw(Integer.valueOf(nilaiPw));	
						setStdetail.add(st);
						 
					}
					
				}
			}
		}
		pw.setKdDlr(kdDlr.getValue());
		pw.setStDetails(setStdetail);
		String noApproval =  getMasterFacade().getTrioH100PelangWilsDao().saveTransaction(pw, getUserSession());
		lblNoApproval.setValue("No Approval "+noApproval);
//		Stdetail st = new Stdetail();
//		st.setStatusPw("A");
//		st.setKdDlr(kdDlr.getValue());
//		stDetailList.setModel(new ListModelList(getMasterFacade().getStdetailDao().getStdetailByCriteria(st))); 
//		stDetailList.setItemRenderer(new StdetailListRenderer());
		
	}
	
	public void onClick$reset(){
		simpan.setDisabled(true);
		kdDlr.setValue(null);
		r1.setSelected(true);
		stDetailList.setModel(new ListModelList());
		stDetailList.clearSelection();
		lblNoApproval.setValue(null);
	}
	
	public void onClick$close(){
		
	}
	
	
	//START OF LOV AREA
	public void onClick$LOV() throws InterruptedException {
		popDealerList.setModel(new ListModelList(getMasterFacade().getHondaH000DealersDao().findAll()));
		popDealerList.setItemRenderer(new DealerListRenderer());
	}
	
	public void onSelect$popDealerList(){
		HondaH000Dealers dlr = (HondaH000Dealers) popDealerList.getSelectedItem().getValue();
		System.out.println("Kd dler = "+dlr.getKdDlr());
		_dealer.setKdDlr(dlr.getKdDlr());
		binder.loadComponent(kdDlr);
		popDealer.close();
	}
	
	public void onClick$popSearch() throws InterruptedException {
		
		HondaH000Dealers d = new HondaH000Dealers();
		d.setDlrNama(popKdDlr.getValue());
		popDealerList.setModel(new ListModelList(getMasterFacade().getHondaH000DealersDao().findByCriteria(d)));
		popDealerList.setItemRenderer(new DealerListRenderer());
	}
	
	public void onClick$popReset() throws InterruptedException {
		System.out.println("klik pop reset");
		List<HondaH000Dealers> listDealer = getMasterFacade().getHondaH000DealersDao().findAll();
		popDealerList.setModel(new ListModelList(listDealer));
		popDealerList.setItemRenderer(new DealerListRenderer());
		popKdDlr.setValue(null);
		popDlrNama.setValue(null);
		popObject = new HondaH000Dealers();
	}

	//END OF LOV AREA
	
	public String getNilaiPwConfig() {
		return nilaiPwConfig;
	}

	public void setNilaiPwConfig(String nilaiPwConfig) {
		this.nilaiPwConfig = nilaiPwConfig;
	}
	
}
