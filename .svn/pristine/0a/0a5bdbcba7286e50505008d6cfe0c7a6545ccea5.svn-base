package com.trio.view.ctrl;

import java.io.ObjectInputStream.GetField;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zk.ui.event.Events;
import org.zkoss.zkplus.databind.AnnotateDataBinder;
import org.zkoss.zul.Button;
import org.zkoss.zul.Decimalbox;
import org.zkoss.zul.Grid;
import org.zkoss.zul.Intbox;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Listcell;
import org.zkoss.zul.Listhead;
import org.zkoss.zul.Listheader;
import org.zkoss.zul.Listitem;
import org.zkoss.zul.ListitemRenderer;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Textbox;
import org.zkoss.zul.Window;
import org.zkoss.zul.event.ListDataListener;

import com.jhlabs.image.OpacityFilter;
import com.trio.base.TrioBasePage;
import com.trio.bean.h000.HondaH000Setdlrs;
import com.trio.bean.h000.HondaH000Setups;
import com.trio.bean.h100.HondaH100Dtlfakdos;
import com.trio.bean.h100.HondaH100Fakdos;
import com.trio.bean.h100.TrioH100Dologs;
import com.trio.bean.h100.TrioH100Dtldologs;
import com.trio.component.TrioPopup;
import com.trio.util.TrioDateUtil;
import com.trio.util.TrioStringUtil;

/**
 * @author glassfish | Saipi Ramli
 *
 * Oct 15, 2012
 */
public class ApproveDoLogistikCtrl extends TrioBasePage {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Window win;
	
	private Button btnLOVDOLogistik;
	
	private Button btnLOVValTag;
	
	private TrioH100Dologs dologs;
	
	private HondaH000Setups setup;
	
	private Grid editGrid;
	private AnnotateDataBinder binder;
	
	private Intbox ibTop;
	private Decimalbox dbDiskonPersen, dbPlafon, dbAR, dbOpenPlafon;
	private Textbox tbKdDealer,tbNoDO,tbValTag;
	
	private Listbox lbDtldologs;
	
	private Button btnSimpan;
	
	private Decimalbox dbTotalDiskon, dbTotalHargaNetto, dbTotalHarga, dbTotalPPN, dbGrandTotal;
	
	@Override
	public void doAfterCompose(Component comp) throws Exception {
		super.doAfterCompose(comp);
		
		binder = (AnnotateDataBinder) page.getAttribute("binder");
		
		dbDiskonPersen.setValue("0");
		btnSimpan.setDisabled(true);
	}
	
	public void onClick$btnLOVDOLogistik() {
		
		List<TrioH100Dologs> list = getMasterFacade().getTrioH100DologsDao().findDologsByStatus("N");
		final Listbox lb = new Listbox();
		Listhead listhead = new Listhead();
		Listheader listheader;
		final TrioPopup pop = new TrioPopup(list, new DologLOVRenderer(), lb, "400px", "300px");
		
		listheader = new Listheader("No Dolog");
		listheader.setParent(listhead);
		listhead.setParent(lb);
		
		lb.addEventListener(Events.ON_SELECT, new EventListener() {
			
			@Override
			public void onEvent(Event arg0) throws Exception {
				TrioH100Dologs dologs = (TrioH100Dologs) lb.getSelectedItem().getValue();
				setDologs(dologs);
				
				binder.loadComponent(editGrid);
				btnLOVValTag.setDisabled(false);
				btnSimpan.setDisabled(false); 
				setListboxDtldologs(dologs.getTrioH100DtldologsSet());
				pop.close();
			}
		});
		
		lb.setParent(pop);
		pop.setParent(win);
		pop.open(self);
		
	}
	
	public void onClick$btnLOVValTag() {
		
		List<HondaH000Setups> list = getMasterFacade().getHondaH000SetupsDao().findByValId("H1_CARA_BAYAR");
		final Listbox lb = new Listbox();
		Listhead listhead = new Listhead();
		
		Listheader listheader;
		
		final TrioPopup pop = new TrioPopup(list, new BayarLOVRenderer(), lb, "400px", "300px");
		
		listheader = new Listheader("Val Tag");
		listheader.setParent(listhead);
		listhead.setParent(lb);
		lb.addEventListener(Events.ON_SELECT, new EventListener() {
			
			@Override
			public void onEvent(Event arg0) throws Exception {
				HondaH000Setups s = (HondaH000Setups) lb.getSelectedItem().getValue();
				setSetup(s);
				
				HondaH000Setdlrs setDlr = getMasterFacade().getHondaH000SetdlrsDao().findByKdDealerAndKodeBisnis(tbKdDealer.getValue(), "A");
				
				
				if (s.getValTag().equalsIgnoreCase("C")){
					dbDiskonPersen.setDisabled(false);
					
					HondaH000Setups stp = getMasterFacade().getHondaH000SetupsDao().findByValIdValTag("H1_CONFIG", "CASH_DISCOUNT_PCT");
					
					final String valChar = "0"+stp.getValChar();
					
					dbDiskonPersen.addEventListener(Events.ON_OK, new EventListener() {
						
						@Override
						public void onEvent(Event arg0) throws Exception {
							if (dbDiskonPersen.getValue().compareTo(new BigDecimal(valChar)) > 0){
								Messagebox.show("Nilai diskon persen yang diisi maksimal "+valChar);
								dbDiskonPersen.setValue(new BigDecimal(valChar));
								return;
							}
							setListboxDtldologs(getDologs().getTrioH100DtldologsSet());
							setGrid();
						}
					});
					dbDiskonPersen.setValue(new BigDecimal(valChar));
					ibTop.setValue(0);
					 
				} else if (s.getValTag().equalsIgnoreCase("R")){
					dbDiskonPersen.setValue(new BigDecimal("0"));
					dbDiskonPersen.setDisabled(true);
					ibTop.setValue(setDlr.getTop().intValue());
					
				} else if (s.getValTag().equalsIgnoreCase("K")){
					dbDiskonPersen.setValue(new BigDecimal("0"));
					dbDiskonPersen.setDisabled(true);
					ibTop.setValue(setDlr.getTop().intValue());
				}
				
				dbPlafon.setValue(setDlr.getPlafon());
				
				// getPlafon
				BigDecimal plafon = new BigDecimal(0);
				plafon = setDlr.getPlafon() == null ? new BigDecimal(0) : setDlr.getPlafon() ;
				//getAR
				BigInteger arDlr = getMasterFacade().getHondaH100ArsDao().getARByKdDlr(tbKdDealer.getValue());
				dbAR.setValue(new BigDecimal(arDlr));
				
				BigDecimal openPlafon = plafon.subtract(new BigDecimal(arDlr));
				dbOpenPlafon.setValue(openPlafon);
				
				setListboxDtldologs(getDologs().getTrioH100DtldologsSet());
				setGrid();
				binder.loadComponent(editGrid);
				pop.close();
			}
		});
		lb.setParent(pop);
		pop.setParent(win);
		pop.open(self);

	}
	
	public TrioH100Dologs getDologs() {
		return dologs;
	}

	public void setDologs(TrioH100Dologs dologs) {
		this.dologs = dologs;
	}

	public HondaH000Setups getSetup() {
		return setup;
	}

	public void setSetup(HondaH000Setups setup) {
		this.setup = setup;
	}
	
	private void setListboxDtldologs(Set<TrioH100Dtldologs> set){
		
		lbDtldologs.setModel(new ListModelList(set));
		lbDtldologs.setItemRenderer(new ListitemRenderer() {
			
			BigDecimal totalDiskon = new BigDecimal(0);
			BigDecimal totalHargaNetto = new BigDecimal(0);
			BigDecimal totalHarga = new BigDecimal(0);
			BigDecimal totalPPN = new BigDecimal(0);
			BigDecimal grandTotal = new BigDecimal(0);
			
			String persenPPN = getMasterFacade().getHondaH000SetupsDao().findValCharByValIdValTag("H1_CONFIG", "PPN");
			
			@Override
			public void render(Listitem item, Object data) throws Exception {
				final TrioH100Dtldologs dtl = (TrioH100Dtldologs) data;
				item.setValue(data);
				
				new Listcell(dtl.getKdItem()).setParent(item);
				new Listcell(String.valueOf(dtl.getQty())).setParent(item);
				
				Listcell lc = new Listcell();
				final Decimalbox dbJumlah =  new Decimalbox();
				final Decimalbox dbNetto = new Decimalbox();
				final Intbox tbQtyApp = new Intbox(dtl.getQty());
				final Decimalbox dbDiscount = new Decimalbox();
				final BigDecimal harga = getMasterFacade().getHondaH100HargasDao().findHargaStdByKdItemAndKdDlr(dtl.getKdItem(), tbKdDealer.getValue());
				
				tbQtyApp.setCols(5);
				tbQtyApp.setMaxlength(3);
				tbQtyApp.setConstraint("no negative,no empty,no zero");
				tbQtyApp.setParent(lc);
				tbQtyApp.addEventListener(Events.ON_OK, new EventListener() {
					
					@Override
					public void onEvent(Event arg0) throws Exception {
						if (tbQtyApp.getValue() > dtl.getQty()){
							Messagebox.show("Qty Approve tidak boleh melebihi Qty DO");
							tbQtyApp.setValue(dtl.getQty());
						}
						
						BigDecimal jmlDiskon = dbDiskonPersen.getValue().multiply(harga); 
						jmlDiskon = jmlDiskon.divide(new BigDecimal(100));
						jmlDiskon = jmlDiskon.multiply(new BigDecimal(tbQtyApp.getValue()));
						dbDiscount.setValue(jmlDiskon); 
						
						BigDecimal netto = harga.multiply(new BigDecimal(tbQtyApp.getValue()));
						dbNetto.setValue(netto.subtract(jmlDiskon));
						
						dbJumlah.setValue(harga.multiply(new BigDecimal(tbQtyApp.getValue())));
						
						setGrid();
						
					}
				});
				lc.setParent(item);
				
				lc = new Listcell();
				Decimalbox dbHarga = new Decimalbox(harga);
				dbHarga.setFormat("###,###.##");
				dbHarga.setStyle("background:transparent; color: black !important;");
				dbHarga.setDisabled(true);
				dbHarga.setParent(lc);
				lc.setParent(item);
				
				lc = new Listcell();
				BigDecimal jmlDiskon = dbDiskonPersen.getValue().multiply(harga); 
				jmlDiskon = jmlDiskon.divide(new BigDecimal(100));
				jmlDiskon = jmlDiskon.multiply(new BigDecimal(tbQtyApp.getValue()));
				dbDiscount.setValue(jmlDiskon); 
				BigDecimal netto = harga.multiply(new BigDecimal(tbQtyApp.getValue()));
				
				totalDiskon = totalDiskon.add(jmlDiskon);
				dbTotalDiskon.setValue(totalDiskon);
				dbTotalDiskon.setDisabled(true);
				totalHargaNetto = totalHargaNetto.add(netto.subtract(jmlDiskon));
				dbTotalHargaNetto.setValue(totalHargaNetto);
				dbTotalHargaNetto.setDisabled(true);
				totalHarga = totalHarga.add(harga.multiply(new BigDecimal(tbQtyApp.getValue())));
				dbTotalHarga.setValue(totalHarga);
				dbTotalHarga.setDisabled(true);
				
				totalPPN = totalHargaNetto.multiply(new BigDecimal(persenPPN)).divide(new BigDecimal(100));
				
				grandTotal = totalHargaNetto.add(totalPPN); 
				dbTotalPPN.setValue(totalPPN);
				dbGrandTotal.setValue(grandTotal);
				
				dbNetto.setValue(netto.subtract(jmlDiskon)); 
				dbDiscount.setFormat("###,###.##");
				dbDiscount.setStyle("background:transparent; color: black !important;");
				dbDiscount.setDisabled(true);
				
				
//				dbDiscount.addEventListener(Events.ON_OK, new EventListener() {
//					
//					@Override
//					public void onEvent(Event arg0) throws Exception {
//						dbDiscount.setValue(dbDiscount.getValue());
//						dbNetto.setValue(harga.subtract(dbDiscount.getValue()));  
//					}
//				});
				dbDiscount.setParent(lc);
				lc.setParent(item);
				
				lc = new Listcell();
				dbNetto.setFormat("###,###.##");
				dbNetto.setStyle("background:transparent; color: black !important;");
				dbNetto.setDisabled(true);
				
				dbNetto.setParent(lc);
				lc.setParent(item);
				
				lc = new Listcell();

				dbJumlah.setValue(harga.multiply(new BigDecimal(tbQtyApp.getValue())));
				dbJumlah.setFormat("###,###.##");
				dbJumlah.setStyle("background:transparent; color: black !important;");
				dbJumlah.setDisabled(true);
				dbJumlah.setParent(lc);
				lc.setParent(item);
				
			}
		});
		
	}

	class DologLOVRenderer implements ListitemRenderer{

		@Override
		public void render(Listitem item, Object data) throws Exception {
			
			TrioH100Dologs dologs = (TrioH100Dologs) data;
			item.setValue(dologs);
			
			new Listcell(dologs.getNoDolog()).setParent(item);
			
		}
	}
	
	class BayarLOVRenderer implements ListitemRenderer {

		@Override
		public void render(Listitem item, Object data) throws Exception {
			HondaH000Setups setup = (HondaH000Setups) data;
			item.setValue(setup);
			
			new Listcell(setup.getValChar()).setParent(item);
		}
	}
	
	public void onClick$btnSimpan(){
		
		HondaH100Fakdos fakdos = new HondaH100Fakdos();
		
		fakdos.setJenisBayar(tbValTag.getValue());
		fakdos.setKodeSalesman(getDologs().getKodeSalesman());
		fakdos.setLokasiAsal(getDologs().getLokasiAsal());
		fakdos.setOtr("F");
		fakdos.setPlafon("Y");
		fakdos.setPoDlrNoPoint(getDologs().getHondaH100Mstpodlrs().getNoPoint());
		fakdos.setTop(ibTop.getValue());
																																								
		fakdos.setKdDlr(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getKdDlr());
		fakdos.setNamaTagihan(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getDlrNama());
		fakdos.setAlamatTagihan(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getDlrAlamat1());
		
		fakdos.setStatus("A");
		fakdos.setNpwp(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getDlrNpwp());
		
		
		fakdos.setBiayalain("0");
		fakdos.setNamaPenerima(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getDlrNama());
		
		fakdos.setAlamatPenerima(getDologs().getHondaH100Mstpodlrs().getDealerKdDlr().getDlrAlamat1());
		
		//podlr_no_point
		Set<HondaH100Dtlfakdos> dtlFakdosSet = new HashSet<HondaH100Dtlfakdos>();
		
		Listbox lb = (Listbox) lbDtldologs.getFellow("win").getFellow("lbDtldologs");
		List<Listitem> items = lb.getItems();

		for (Listitem item : items){
			List<Listcell> listLC = item.getChildren();
			TrioH100Dtldologs dtlDologs = (TrioH100Dtldologs) item.getValue();
			HondaH100Dtlfakdos dtlFakdos = new HondaH100Dtlfakdos();
			for (Listcell cell : listLC){
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 3){
					Decimalbox db = (Decimalbox) cell.getFirstChild();
					dtlFakdos.setHargaKosong(db.getValue());
					dtlFakdos.setHargaStd(db.getValue());
				}
				
				if (cell.getFirstChild() instanceof Intbox && cell.getColumnIndex() == 2){
					Intbox ibQtyApp = (Intbox) cell.getFirstChild();
					dtlFakdos.setQty(ibQtyApp.getValue().longValue());
				}
				
				dtlFakdos.setDiscountPersen(dbDiskonPersen.getValue());
				dtlFakdos.setKdItem(dtlDologs.getKdItem());
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 5){
					Decimalbox dbHargaNetto = (Decimalbox) cell.getFirstChild();
					dtlFakdos.setHargaNetto(dbHargaNetto.getValue());
				}
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 4){
					Decimalbox dbDiskon = (Decimalbox) cell.getFirstChild();
					dtlFakdos.setDiscount(dbDiskon.getValue());
				}
				
				dtlFakdos.setBiayaLain(new BigDecimal(0));
				dtlFakdos.setBiayaStnk(new BigDecimal(0));
				
				dtlFakdos.setQtySisa(0L);
				dtlFakdos.setQtyJual(0L);
				
			}
			dtlFakdosSet.add(dtlFakdos);
		}
		fakdos.setHondaH100DtlfakdosSet(dtlFakdosSet);
		
		String nodo = getMasterFacade().getHondaH100FakdosDao().saveTransaction(fakdos, getDologs().getNoDolog(),  getUserSession());
		tbNoDO.setValue(nodo);
		try {
			Messagebox.show("Transaksi berhasil dengan No DO "+nodo);
		} catch (InterruptedException e) { 
			e.printStackTrace();
		}
		btnSimpan.setDisabled(true);
	}
	
	public void onClick$btnReset(){
		setSetup(null);
		setDologs(null);
		lbDtldologs.setModel(new ListModelList());
		binder.loadComponent(editGrid);
		btnLOVValTag.setDisabled(true);
		btnSimpan.setDisabled(true);
		dbDiskonPersen.setDisabled(true);
		dbDiskonPersen.setValue(new BigDecimal(0));
		tbNoDO.setValue(null);
		ibTop.setValue(0);
		dbPlafon.setValue(new BigDecimal(0));
		dbAR.setValue(new BigDecimal(0));
		dbOpenPlafon.setValue(new BigDecimal(0));
		
		dbTotalDiskon.setValue(new BigDecimal(0));
		dbTotalHarga.setValue(new BigDecimal(0));
		dbTotalHargaNetto.setValue(new BigDecimal(0));
		dbTotalPPN.setValue(new BigDecimal(0));
		dbGrandTotal.setValue(new BigDecimal(0));
	}
	
	public void setGrid(){
		
		String persenPPN = getMasterFacade().getHondaH000SetupsDao().findValCharByValIdValTag("H1_CONFIG", "PPN");
		
		Listbox lb = (Listbox) lbDtldologs.getFellow("win").getFellow("lbDtldologs");
		List<Listitem> items = lb.getItems();
		BigDecimal totalDiskon = new BigDecimal(0);
		BigDecimal totalHarga = new BigDecimal(0);
		BigDecimal totalHargaNetto = new BigDecimal(0);
		BigDecimal totalPPN = new BigDecimal(0);
		BigDecimal grandTotal = new BigDecimal(0);
		
		for (Listitem item : items){
			List<Listcell> listLC = item.getChildren();
			TrioH100Dtldologs dtlDologs = (TrioH100Dtldologs) item.getValue();
			HondaH100Dtlfakdos dtlFakdos = new HondaH100Dtlfakdos();
			
			for (Listcell cell : listLC){
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 4){
					Decimalbox db = (Decimalbox) cell.getFirstChild();
					totalDiskon = totalDiskon.add(db.getValue());
				}
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 5){
					Decimalbox dbHargaNetto = (Decimalbox) cell.getFirstChild();
					totalHargaNetto = totalHargaNetto.add(dbHargaNetto.getValue());
				}
				
				if (cell.getFirstChild() instanceof Decimalbox && cell.getColumnIndex() == 6){
					Decimalbox dbHarga = (Decimalbox) cell.getFirstChild();
					totalHarga = totalHarga.add(dbHarga.getValue());
				}
				
			}
			
		}
		dbTotalDiskon.setValue(totalDiskon);
		dbTotalHarga.setValue(totalHarga);
		dbTotalHargaNetto.setValue(totalHargaNetto);
		
		totalPPN = totalHargaNetto.multiply(new BigDecimal(persenPPN)).divide(new BigDecimal(100));
		
		grandTotal = totalHargaNetto.add(totalPPN); 
		dbTotalPPN.setValue(totalPPN);
		dbGrandTotal.setValue(grandTotal);
		
	}
	
}
