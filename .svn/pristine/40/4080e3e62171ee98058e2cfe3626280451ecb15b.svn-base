package com.trio.view.ctrl;

import org.zkoss.zk.ui.Component;
import org.zkoss.zkplus.databind.AnnotateDataBinder;
import org.zkoss.zul.Button;
import org.zkoss.zul.Combobox;
import org.zkoss.zul.Grid;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Radiogroup;
import org.zkoss.zul.api.Textbox;


import com.trio.base.TrioBasePage;
import com.trio.bean.h000.TrioH000Mstroleaccess;
import com.trio.view.ctrl.renderer.RoleListRenderer;

public class RoleAccessCtrl extends TrioBasePage {

	private static final long serialVersionUID = 1L;
	private AnnotateDataBinder binder;
	private Listbox roleList;
	private Grid editRoleGrid;
	private Button createRole;
	private Button searchRole;
	private Button resetRole;
	private Combobox cbVparent;
	private Radiogroup radioStatus;
	
//	private Textbox tbVroleid, tbVmenuid;
	
	private TrioH000Mstroleaccess role;

	@Override
	public void doAfterCompose(Component comp) throws Exception {
		super.doAfterCompose(comp);
		binder = (AnnotateDataBinder) page.getAttribute("binder");
		role = new TrioH000Mstroleaccess();
		roleList.setModel(new ListModelList(
				getMasterFacade().getTrioH000MstroleaccessDao().findAll()));
		roleList.setItemRenderer(new RoleListRenderer());
	}
	
	private ListModelList getModel() {
		return (ListModelList) roleList.getModel();
	}
	
	public void onClick$resetRole() {
		reset();
	}
	
	public void reset(){
		roleList.clearSelection();
		roleList.setModel(new ListModelList(getMasterFacade().getTrioH000MstroleaccessDao().findAll()));
		role = new TrioH000Mstroleaccess();
		binder.loadComponent(editRoleGrid);
		radioStatus.setSelectedIndex(0);
	}
	
	public void onSelect$roleList() {
		role = (TrioH000Mstroleaccess) roleList.getSelectedItem().getValue();
		binder.loadComponent(editRoleGrid);
	}
	
	public void onClick$createRole() throws InterruptedException {
		
		String status = radioStatus.getSelectedItem().getValue();
		role.setVstatus(status);
		if (role.getVroleid() == null ||  role.getVmenuid() == null
				|| role.getVstatus() == null ) {
			Messagebox.show("Data belum lengkap");
		} else {
			getMasterFacade().getTrioH000MstroleaccessDao().saveOrUpdate(role, getUserSession());
			getModel().add(role);
		}
		
		reset();
	}
	
	public void onClick$searchRole() throws InterruptedException {
		System.out.println("method cari");
		TrioH000Mstroleaccess ra = new TrioH000Mstroleaccess();
		ra.setVroleid(role.getVroleid());
		ra.setVmenuid(role.getVmenuid());
		ra.setVstatus(radioStatus.getSelectedItem().getValue());
		
		System.out.println(""+ra.getVroleid());
		System.out.println(""+ra.getVmenuid());
		System.out.println(""+ra.getVstatus());
		roleList.setModel(new ListModelList(getMasterFacade().getTrioH000MstroleaccessDao().findByCriteria(ra)));
	}

	public TrioH000Mstroleaccess getRole() {
		return role;
	}

	public void setRole(TrioH000Mstroleaccess role) {
		this.role = role;
	}
	
}
