package com.trio.dao.h000;

import java.util.List;


import org.hibernate.Query;
import org.springframework.transaction.annotation.Transactional;

import com.trio.bean.h000.HondaH000Setups;
import com.trio.hibernate.TrioHibernateDaoSupport;

public class HondaH000SetupsDaoImpl extends TrioHibernateDaoSupport implements HondaH000SetupsDao {
	
	/*
	 * Script insert H1_CONFIG
	 * insert into HONDA_H000_SETUPS (val_id, val_tag, val_char) values ('H1_CONFIG','NOMINAL_PELANG_WIL','300000');
	 * @see com.trio.model.dao.HondaH000SetupsDao#findByValId(java.lang.String)
	 */

	@Transactional(readOnly = true)
	public HondaH000Setups findByValId(String valId) {
		String query = "select a from HondaH000Setups a where a.valId = :valId";
		Query q =  getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery(query);
		q.setParameter("valId", valId);
		HondaH000Setups h = (HondaH000Setups) q.uniqueResult();
		return h; 
	}

	@SuppressWarnings("unchecked")
	@Transactional(readOnly = true)
	public List<HondaH000Setups> findByValTag(String valTag) {
		String query = "from HondaH000Setups a where a.valTag = :valTag";
		Query q =  getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery(query);
		q.setParameter("valTag", valTag);
		List<HondaH000Setups> list =  q.list();
		return list; 
	}

	@SuppressWarnings("unchecked")
	@Transactional(readOnly = true)
	public List<HondaH000Setups> findByValChar(String valChar) {
		String query = "from HondaH000Setups a where a.valChar = valChar";
		Query q =  getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery(query);
		q.setParameter("valChar", valChar);
		List<HondaH000Setups> list = q.list();
		return list;
	}

	@Transactional(readOnly = true)
	public HondaH000Setups findByValIdValTag(String valId, String valTag) {
		String query = "from HondaH000Setups a where a.valId = :valId and a.valTag = :valTag";
		Query q =  getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery(query);
		q.setParameter("valId", valId);
		q.setParameter("valTag", valTag);
		HondaH000Setups h = (HondaH000Setups) q.uniqueResult();
		return h;
	}

	@Override
	public void saveOrUpdate(HondaH000Setups domain, String user) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(HondaH000Setups domain) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public List<HondaH000Setups> findAll() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<HondaH000Setups> findByExample(HondaH000Setups domain) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List<HondaH000Setups> findByCriteria(HondaH000Setups domain) {
		// TODO Auto-generated method stub
		return null;
	}

}
