package com.trio.view.ctrl;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Set;

import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zk.ui.event.Events;
import org.zkoss.zkplus.databind.AnnotateDataBinder;
import org.zkoss.zul.Button;
import org.zkoss.zul.Decimalbox;
import org.zkoss.zul.Grid;
import org.zkoss.zul.Intbox;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Listcell;
import org.zkoss.zul.Listhead;
import org.zkoss.zul.Listheader;
import org.zkoss.zul.Listitem;
import org.zkoss.zul.ListitemRenderer;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Textbox;
import org.zkoss.zul.Window;
import org.zkoss.zul.event.ListDataListener;

import com.jhlabs.image.OpacityFilter;
import com.trio.base.TrioBasePage;
import com.trio.bean.h000.HondaH000Setdlrs;
import com.trio.bean.h000.HondaH000Setups;
import com.trio.bean.h100.TrioH100Dologs;
import com.trio.bean.h100.TrioH100Dtldologs;
import com.trio.component.TrioPopup;

/**
 * @author glassfish | Saipi Ramli
 *
 * Oct 15, 2012
 */
public class ApproveDoLogistikCtrl extends TrioBasePage {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Window win;
	
	private Button btnLOVDOLogistik;
	
	private Button btnLOVValTag;
	
	private TrioH100Dologs dologs;
	
	private HondaH000Setups setup;
	
	private Grid editGrid;
	private AnnotateDataBinder binder;
	
	private Intbox ibTop;
	private Decimalbox dbDiskon,dbDiskonPersen, dbPlafon, dbAR, dbOpenPlafon;
	private Textbox tbKdDealer;
	
	private Listbox lbDtldologs;
	
	@Override
	public void doAfterCompose(Component comp) throws Exception {
		super.doAfterCompose(comp);
		
		binder = (AnnotateDataBinder) page.getAttribute("binder");
		
		dbDiskon.setDisabled(true);
		dbDiskonPersen.setValue("0");
		dbDiskonPersen.setDisabled(true);
	}
	
	public void onClick$btnLOVDOLogistik() {
		
		List<TrioH100Dologs> list = getMasterFacade().getTrioH100DologsDao().findDologsByStatus("N");
		final Listbox lb = new Listbox();
		Listhead listhead = new Listhead();
		Listheader listheader;
		final TrioPopup pop = new TrioPopup(list, new DologLOVRenderer(), lb, "400px", "300px");
		
		listheader = new Listheader("No Dolog");
		listheader.setParent(listhead);
		listhead.setParent(lb);
		
		lb.addEventListener(Events.ON_SELECT, new EventListener() {
			
			@Override
			public void onEvent(Event arg0) throws Exception {
				TrioH100Dologs dologs = (TrioH100Dologs) lb.getSelectedItem().getValue();
				setDologs(dologs);
				binder.loadComponent(editGrid);
				btnLOVValTag.setDisabled(false);
				 
				setListboxDtldologs(dologs.getTrioH100DtldologsSet());
				pop.close();
			}
		});
		
		lb.setParent(pop);
		pop.setParent(win);
		pop.open(self);
		
	}
	
	public void onClick$btnLOVValTag() {
		
		List<HondaH000Setups> list = getMasterFacade().getHondaH000SetupsDao().findByValId("H1_CARA_BAYAR");
		final Listbox lb = new Listbox();
		Listhead listhead = new Listhead();
		
		Listheader listheader;
		
		final TrioPopup pop = new TrioPopup(list, new BayarLOVRenderer(), lb, "400px", "300px");
		
		listheader = new Listheader("Val Tag");
		listheader.setParent(listhead);
		listhead.setParent(lb);
		lb.addEventListener(Events.ON_SELECT, new EventListener() {
			
			@Override
			public void onEvent(Event arg0) throws Exception {
				HondaH000Setups s = (HondaH000Setups) lb.getSelectedItem().getValue();
				setSetup(s);
				
				HondaH000Setdlrs setDlr = getMasterFacade().getHondaH000SetdlrsDao().findByKdDealerAndKodeBisnis(tbKdDealer.getValue(), "A");
				ibTop.setValue(setDlr.getTop().intValue());
				
				if (s.getValTag().equalsIgnoreCase("C")){
					dbDiskonPersen.setDisabled(false);
					ibTop.setValue(0);
					HondaH000Setups stp = getMasterFacade().getHondaH000SetupsDao().findByValIdValTag("H1_CONFIG", "CASH_DISCOUNT_PCT");
					System.out.println("valchar obj = "+stp.getValChar()); 
					
					String valChar = "0"+stp.getValChar();
					System.out.println("valchar obj = "+valChar);
					dbDiskonPersen.setValue(new BigDecimal(valChar)); 
				} else if (s.getValTag().equalsIgnoreCase("R")){
					dbDiskonPersen.setValue(new BigDecimal("0"));
					dbDiskonPersen.setDisabled(true);
					dbPlafon.setValue(setDlr.getPlafon());
					
					// getPlafon
					BigDecimal plafon = new BigDecimal(0);
					plafon = setDlr.getPlafon() == null ? new BigDecimal(0) : setDlr.getPlafon() ;
					//getAR
					BigInteger arDlr = getMasterFacade().getHondaH100ArsDao().getARByKdDlr(tbKdDealer.getValue());
					dbAR.setValue(new BigDecimal(arDlr));
					
					BigDecimal openPlafon = plafon.subtract(new BigDecimal(arDlr));
					dbOpenPlafon.setValue(openPlafon);
					
				} else if (s.getValTag().equalsIgnoreCase("K")){
					dbDiskonPersen.setValue(new BigDecimal("0"));
					dbDiskonPersen.setDisabled(true);
					ibTop.setValue(0);
				}
				binder.loadComponent(editGrid);
				pop.close();
			}
		});
		lb.setParent(pop);
		pop.setParent(win);
		pop.open(self);

	}
	
	public TrioH100Dologs getDologs() {
		return dologs;
	}

	public void setDologs(TrioH100Dologs dologs) {
		this.dologs = dologs;
	}

	public HondaH000Setups getSetup() {
		return setup;
	}

	public void setSetup(HondaH000Setups setup) {
		this.setup = setup;
	}
	
	private void setListboxDtldologs(Set<TrioH100Dtldologs> set){
		lbDtldologs.setModel(new ListModelList(set));
		lbDtldologs.setItemRenderer(new ListitemRenderer() {
			
			@Override
			public void render(Listitem item, Object data) throws Exception {
				TrioH100Dtldologs dtl = (TrioH100Dtldologs) data;
				item.setValue(dtl);
				
				new Listcell(dtl.getKdItem()).setParent(item);
				new Listcell(String.valueOf(dtl.getQty())).setParent(item);
				new Listcell("QTY App").setParent(item);
				BigDecimal harga = getMasterFacade().getHondaH100HargasDao().findHargaStdByKdItemAndKdDlr(dtl.getKdItem(), tbKdDealer.getValue());
				new Listcell(harga.toString()).setParent(item);
			}
		});
	}

	class DologLOVRenderer implements ListitemRenderer{

		@Override
		public void render(Listitem item, Object data) throws Exception {
			
			TrioH100Dologs dologs = (TrioH100Dologs) data;
			item.setValue(dologs);
			
			new Listcell(dologs.getNoDolog()).setParent(item);
			
		}
	}
	
	class BayarLOVRenderer implements ListitemRenderer {

		@Override
		public void render(Listitem item, Object data) throws Exception {
			HondaH000Setups setup = (HondaH000Setups) data;
			item.setValue(setup);
			
			new Listcell(setup.getValChar()).setParent(item);
		}
	}
	
}
