package com.trio.view.ctrl;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.jasperreports.engine.JRDataSource;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import org.zkoss.util.media.AMedia;
import org.zkoss.zk.ui.Sessions;
import org.zkoss.zk.ui.util.GenericForwardComposer;
import org.zkoss.zkex.zul.Jasperreport;
import org.zkoss.zul.Button;
import org.zkoss.zul.Iframe;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Messagebox;
import org.zkoss.zul.Radiogroup;
import org.zkoss.zul.Textbox;
import org.zkoss.zul.Window;

/**
* @author atilio
* Clase para generar llamar un reporte de Jasper Reports
* desde zk usando archivos .jrxml,.jasper,
* y las etiquetas report de zk
* Nota: JasperPrint siempre debe recibir una fuente
* de datos asi est√° este vacia
*/

import com.trio.base.TrioBasePage;
import com.trio.bean.h100.TrioH100Stdetails;

public class CetakSTNKCtrl extends TrioBasePage {

	Button btnReportes;
	Window winReportes;
	Jasperreport report;
	Listbox format;
	Iframe frame;
	String reportSrc,jrxmlSrc,folder;
	Map parameters = new HashMap();
	AMedia am,bm;
	Connection con;
	JRDataSource reportSource;
	List list = null;
	private Textbox noMesin;
	private Radiogroup radioFaktur;
	
	public CetakSTNKCtrl() throws SQLException {
		super();
		
	}
	
	public void showReportZKtag() {
		
		File fileReport = null;
		
		if (radioFaktur.getSelectedItem().getValue().equalsIgnoreCase("0")){
			fileReport = new File("/home/glassfish/AHMRPT/zkreport/T10mdmun004_2.jasper");
		}else{
			fileReport = new File("/home/glassfish/AHMRPT/zkreport/T10mdmun004_1.jasper");
		}
		
		if (fileReport != null){
			reportSrc = fileReport.getAbsolutePath();
		}else{
			reportSrc = null;
		}
		//"JBB1E1310298"
		parameters.put("NOMESIN_UPARAM", noMesin.getValue().trim() );
		report.setParameters(parameters);
		report.setDataConnection(getReportConnection());
		report.setType("pdf");
		report.setSrc(reportSrc);
	}
	
	public void onClick$btnReportes() throws JRException, IOException, InterruptedException {
		String noMesinString = noMesin.getValue().trim();
		TrioH100Stdetails st = null;
		
		if (noMesinString.equalsIgnoreCase("") || noMesinString == null){
			Messagebox.show("No mesin harus diisi"); 
			return;
		}
		st =  getMasterFacade().getTrioH100StdetailsDao().findByNomesin(noMesinString);
		if (st == null){
			Messagebox.show("No mesin tidak ditemukan"); 
			return;
		}
		st = getMasterFacade().getTrioH100StdetailsDao().findByNomesinAndStatusPW(noMesinString, "A");
		if (st != null){
			Messagebox.show("No mesin termasuk kategori pelanggaran wilayah"); 
			return;
		}
		showReportZKtag();
	}

}