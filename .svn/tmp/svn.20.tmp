package com.trio.view.ctrl;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;

import org.springframework.transaction.config.TxNamespaceHandler;
import org.springframework.web.bind.annotation.InitBinder;
import org.zkoss.zk.ui.Component;
import org.zkoss.zul.Button;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Listbox;
import org.zkoss.zul.Listcell;
import org.zkoss.zul.Listitem;
import org.zkoss.zul.ListitemRenderer;
import org.zkoss.zul.Popup;
import org.zkoss.zul.Textbox;

import com.trio.base.TrioBasePage;
import com.trio.bean.h000.HondaH000Dealers;
import com.trio.bean.h000.HondaH000Setdlrs;
import com.trio.bean.h100.HondaH100Mstpodlrs;
import com.trio.bean.h100.HondaH100Stglobals;
import com.trio.bean.h100.TrioH100Dologs;
import com.trio.bean.h100.TrioH100Dtldologs;
import com.trio.bean.h300.HondaH300Salesman;
import com.trio.util.TrioDateUtil;
import com.trio.view.ctrl.renderer.MstpodlrRenderer;
import com.trio.view.ctrl.renderer.PopupPoInternalRenderer;
import com.trio.view.ctrl.renderer.SalesmanRenderer;

/**
 * @author glassfish | Saipi Ramli
 *
 * Oct 15, 2012
 */
public class EntryDoLogistikCtrl extends TrioBasePage {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Textbox tbKodeDealer;
	private Textbox tbNamaDealer;
	
	private Popup popDealer;
	private Textbox popDlrNama;
	
	private Button popSearch;
	private Button popReset;
	private Listbox popDealerList;
	
	private Button btnLovDealer;
	
	private Button btnLovNoPoInternal;
	private Popup popInternal;
	private Listbox popInternalList;
	
	private Textbox tbNoPoInternal;
	
	private Button btnLovSalesman;
	private Textbox tbKodeSalesman;
	private Textbox tbNamaSalesman;
	
	private Popup popSalesman;
	private Listbox popSalesmanList;
	
	private Textbox tbLokasi;
	private Textbox tbAlamat;
	private Button btnLovLokasi;
	
	private Popup popLokasi;
	private Listbox popLokasiList;
	
	private Button btSimpan;
	
	private Textbox tbOpenPlafon;
	
	private Button btnLovItem;
	private Popup popItem;
	private Listbox popItemList;
	private Textbox kdItem;
	
	private Textbox tbQtyOh, tbQtyBook, tbQtyRFS, tbQtyPO, tbQtySisa, tbQtyDO;
	private Button btnAddDetail;
	
	private List<TrioH100Dtldologs> listDtlDologs;
	private Listbox lbDtldologList;
	
	@Override
	public void doAfterCompose(Component comp) throws Exception {
		// TODO Auto-generated method stub
		super.doAfterCompose(comp);
		listDtlDologs = new ArrayList<TrioH100Dtldologs>();
	}
	
	//popup Dealer
	public void onClick$btnLovDealer() throws InterruptedException {
		List<HondaH000Dealers> list = getMasterFacade().getHondaH100MstpodlrsDao().findByStatus("N", null);
		popDealerList.setModel(new ListModelList(list));
		popDealerList.setItemRenderer(new MstpodlrRenderer());
	}
	
	public void onClick$popSearch(){
		String dlrNamaText = popDlrNama.getText().trim();
		List<HondaH000Dealers> list = getMasterFacade().getHondaH100MstpodlrsDao().findByStatus("N", dlrNamaText);
		popDealerList.setModel(new ListModelList(list));
		popDealerList.setItemRenderer(new MstpodlrRenderer());
	}
	
	public void onClick$popReset(){
		popDlrNama.setValue(null);
		List<HondaH000Dealers> list = getMasterFacade().getHondaH100MstpodlrsDao().findByStatus("N", null);
		popDealerList.setModel(new ListModelList(list));
		popDealerList.setItemRenderer(new MstpodlrRenderer());
	}
	
	public void onSelect$popDealerList(){
		HondaH000Dealers dlr = (HondaH000Dealers) popDealerList.getSelectedItem().getValue();
		tbKodeDealer.setValue(dlr.getKdDlr());
		tbNamaDealer.setValue(dlr.getDlrNama());
		tbOpenPlafon.setValue(""+getEstimasiOpenPlafon(dlr.getKdDlr()));
		popDealer.close();
	}
	
	//popup Internal
	public void onClick$btnLovNoPoInternal(){
		String kdDlrText = tbKodeDealer.getValue().trim();
		List<HondaH100Mstpodlrs> list = getMasterFacade().getHondaH100MstpodlrsDao().findByStatusAndKdDlr("N", kdDlrText);
		popInternalList.setModel(new ListModelList(list));
		popInternalList.setItemRenderer(new PopupPoInternalRenderer());
	}
	
	public void onSelect$popInternalList(){
		HondaH100Mstpodlrs podlrs = (HondaH100Mstpodlrs) popInternalList.getSelectedItem().getValue();
		tbNoPoInternal.setValue(podlrs.getNoPoint());
		popInternal.close();
	}
	
	//popup Salesman
	public void onClick$btnLovSalesman(){
		List list = getMasterFacade().getHondaH300SalesmanDao().findByStatusAndBussiness("A", "A");
		popSalesmanList.setModel(new ListModelList(list));
		popSalesmanList.setItemRenderer(new SalesmanRenderer());
	}
	
	public void onSelect$popSalesmanList(){
		HondaH300Salesman sales = (HondaH300Salesman) popSalesmanList.getSelectedItem().getValue();
		tbKodeSalesman.setValue(sales.getKodeSales());
		tbNamaSalesman.setValue(sales.getNamaSales());
		popSalesman.close();
	}
	
	//popup Lokasi
	public void onClick$btnLovLokasi(){
		List<String> list = getMasterFacade().getHondaH100StglobalsDao().findByQtyOnHandMoreZero();
		popLokasiList.setModel(new ListModelList(list));
		popLokasiList.setItemRenderer(new ListitemRenderer() {
			
			@Override
			public void render(Listitem item, Object data) throws Exception {
				String g = (String) data; 
				item.setValue(g);
				new Listcell(g).setParent(item);
			}
		});
	}
	
	public void onSelect$popLokasiList(){
		String global = (String) popLokasiList.getSelectedItem().getValue();
		tbLokasi.setValue(global);
		String alamat = getMasterFacade().getHondaH100GudangsDao().findByLokasi(global).getAlamatLokasi();
		tbAlamat.setValue(alamat);
		popLokasi.close();
	}
	
	public BigDecimal getEstimasiOpenPlafon(String kdDlr){
		/*
		 * EstimasiOpenPlafon = Plafon - AR - DO_Logistik
		 * Plafon = 
		 * AR =
		 * DO_Logistik =
		 */
		
		// getPlafon
		BigDecimal plafon = new BigDecimal(0);
		HondaH000Setdlrs setDlr = getMasterFacade().getHondaH000SetdlrsDao().findByKdDealerAndKodeBisnis(kdDlr, "A");
		
		plafon = setDlr.getPlafon() == null ? new BigDecimal(0) : setDlr.getPlafon() ;
		
		//getAR
		BigInteger arDlr = getMasterFacade().getHondaH100ArsDao().getARByKdDlr(kdDlr);
		
		//getDO_Logistik
		BigDecimal doLogistik = getMasterFacade().getHondaH100FakdosDao().getSumHargaDOLogistisByKdDlr(kdDlr);
		
		BigDecimal arDlrDec = new BigDecimal(arDlr);
		arDlrDec.add(doLogistik);
		
		System.out.println("Jumlah plafon "+plafon);
		System.out.println("Jumlah AR "+arDlr);
		System.out.println("Jumlah DO Logistik "+doLogistik);
		System.out.println("Jumlah AR + DO Logistik "+arDlrDec);
		
		BigDecimal est = plafon.subtract(arDlrDec);
		return est;
	}
	
	//popup Item
	public void onClick$btnLovItem(){
		List<HondaH100Stglobals> list = getMasterFacade().getHondaH100StglobalsDao().getKdItemByLokasi(tbLokasi.getValue().trim());
		popItemList.setModel(new ListModelList(list));
		popItemList.setItemRenderer(new ListitemRenderer() { 
			
			@Override
			public void render(Listitem item, Object data) throws Exception {
				HondaH100Stglobals globals = (HondaH100Stglobals) data;
				item.setValue(globals);
				
				new Listcell(globals.getKdItem()).setParent(item);
				new Listcell(globals.getQtyOnhand().toString()).setParent(item);
				new Listcell(globals.getQtyBook().toString()).setParent(item);
			}
		});
	}
	
	public void onSelect$popItemList(){
		HondaH100Stglobals globals = (HondaH100Stglobals) popItemList.getSelectedItem().getValue();
		kdItem.setValue(globals.getKdItem());
		tbQtyOh.setValue(globals.getQtyOnhand().toString());
		tbQtyBook.setValue(globals.getQtyBook().toString());
		Long qtyRFS = globals.getQtyOnhand() - globals.getQtyBook();
		tbQtyRFS.setValue(qtyRFS.toString());
		
		//get Qty PO
		Long qtyPO = getMasterFacade().getHondaH100DtlpodlrfixesDao().getQtyOrderByPoIntAndKdItem(tbNoPoInternal.getValue(), globals.getKdItem());
		tbQtyPO.setValue(qtyPO.toString());
		//get Qty Open
		Long qtyOpen = getMasterFacade().getHondaH100DtlfakdosDao().getQtyPoOpenByPoIntAndKdItem(tbNoPoInternal.getValue(), globals.getKdItem());
		Long qtySisa = qtyPO - qtyOpen;
		tbQtySisa.setValue(qtySisa.toString());
		
		popItem.close();
	}
	
	public void onClick$btnAddDetail(){
		TrioH100Dtldologs dtlDolog = new TrioH100Dtldologs();
		dtlDolog.setDologNoDolog("NO DO LOG");
		dtlDolog.setKdItem(kdItem.getValue().toString());
		dtlDolog.setQty(Integer.parseInt(tbQtyDO.getValue())); 
		listDtlDologs.add(dtlDolog);
		System.out.println("Ukuran Dtl "+listDtlDologs.size()); 
		lbDtldologList.setModel(new ListModelList(listDtlDologs));
		lbDtldologList.setItemRenderer(new ListitemRenderer() {
			
			@Override
			public void render(Listitem item, Object data) throws Exception {
				TrioH100Dtldologs dtl = (TrioH100Dtldologs) data;
				item.setValue(dtl);
				
				new Listcell(dtl.getKdItem()).setParent(item);
				new Listcell(String.valueOf(dtl.getQty())).setParent(item); 
			}
		});
	}
	
	public void onClick$btSimpan(){
		
		System.out.println("ini simpan");
		
		TrioH100Dologs dologs = new TrioH100Dologs();
		dologs.setKdDlr(tbKodeDealer.getText());
		dologs.setPoDlrNoPont(tbNoPoInternal.getText());
		dologs.setTglDolog(TrioDateUtil.getLongSysDateOracle());
		dologs.setNoDolog("00555/DOLOG-T10/2012");
		dologs.setKodeSalesman(tbKodeSalesman.getText());
		dologs.setNamaSalesman(tbNamaSalesman.getText());
		dologs.setLokasiAsal(tbLokasi.getText());
		dologs.setAlamatLokasi(tbAlamat.getText());
		dologs.setHarga(new BigInteger("300000"));
		
		getMasterFacade().getTrioH100DologsDao().save(dologs, getUserSession());
		
		
		
	}
}
